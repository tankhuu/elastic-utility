input {
  # jdbc {
  #   jdbc_driver_library => "${NETSUITE_JDBC_DRIVER}"
  #   jdbc_driver_class => "com.netsuite.jdbc.openaccess.OpenAccessDriver"
  #   jdbc_connection_string => "jdbc:ns://${NETSUITE_SERVICE_HOST}:${NETSUITE_SERVICE_PORT};ServerDataSource=${NETSUITE_SERVICE_DATA_SOURCE};encrypted=1;Ciphersuites=TLS_RSA_WITH_AES_128_CBC_SHA;CustomProperties=(AccountID=${NETSUITE_ACCOUNT_ID};RoleID=${NETSUITE_ROLE_ID})"
  #   jdbc_user => "${NETSUITE_USER}"
  #   jdbc_password => "${NETSUITE_PWD}" # Key Store
  #   schedule => "* * * * *"
  #   statement => "SELECT CUS.CUSTOMER_ID AS NETSUITE_ID, CUS.NAME AS CUSTOMER_CODE, REPLACE(CUS.FULL_NAME, CUS.NAME, '') FULL_NAME, CUS.PHONE, CUS.MOBILE_PHONE, CUS.CREATE_DATE, CUS.DATE_OF_BIRTH, CUS.EMAIL, GEN.LIST_ITEM_NAME AS GENDER, TRUNC(DATE_FIRST_SALE, 'DD') DATE_FIRST_SALE FROM CUSTOMERS CUS LEFT JOIN GENDER GEN ON CUS.GENDER_ID = GEN.LIST_ID LEFT JOIN MARITAL_STATUSES MRS ON CUS.MARITAL_STATUS_ID = MRS.LIST_ID"
  #   type => "customers"
  # }
  jdbc {
    jdbc_driver_library => "${NETSUITE_JDBC_DRIVER}"
    jdbc_driver_class => "com.netsuite.jdbc.openaccess.OpenAccessDriver"
    jdbc_connection_string => "jdbc:ns://${NETSUITE_SERVICE_HOST}:${NETSUITE_SERVICE_PORT};ServerDataSource=${NETSUITE_SERVICE_DATA_SOURCE};encrypted=1;Ciphersuites=TLS_RSA_WITH_AES_128_CBC_SHA;CustomProperties=(AccountID=${NETSUITE_ACCOUNT_ID};RoleID=${NETSUITE_ROLE_ID})"
    jdbc_user => "${NETSUITE_USER}"
    jdbc_password => "${NETSUITE_PWD}" # Key Store
    schedule => "* * * * *"
    statement => "SELECT TRAN.*, TRANL.net_amount FROM TRANSACTIONS TRAN LEFT JOIN TRANSACTION_LINES TRANL ON TRANL.transaction_id = TRAN.transaction_id AND TRANL.account_id = 256 WHERE transaction_type = 'Invoice'"
    type => "invoices"
  }
}

filter {
  grok {
    match => { [@metadata][timestamp] => [CREATE_DATE]}
  }
  if [type] in ["customers", "items", "stores"] {
    mutate {
      add_field => {"prefix" => "dimensions"}
    }
  } else {
    mutate {
      add_field => {"prefix" => "facts"}
    }
  }
}

output {
  stdout {
    codec => rubydebug {metadata => true}
  }
  # if [type] in ["customers", "items", "stores"]] {
  #   elasticsearch {
  #     hosts => "${ES_HOST}:${ES_PORT}"
  #     user => "ES_USER"
  #     password => "${ES_PWD}"
  #     manage_template => false
  #     index => "%{type}-%{+YYYY}"
  #   }
  # } else {
  #   elasticsearch {
  #     hosts => "${ES_HOST}:${ES_PORT}"
  #     user => "ES_USER"
  #     password => "${ES_PWD}"
  #     manage_template => false
  #     index => "%{type}-%{+YYYY.MM}"
  #   }
}